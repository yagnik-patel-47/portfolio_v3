---
const { pageName } = Astro.props;
import ThemePopover from "@/components/ThemePopover.tsx";
---

<nav
  class="flex py-4 px-8 md:px-24 lg:px-40 xl:px-60 2xl:px-[26rem] flex-col sticky w-full top-0 z-10 h-auto"
  id="nav"
>
  <div class="flex justify-between items-center">
    <a href="/#" class="font-patrick-hands text-2xl">Yagnik Patel</a>
    <div class="flex space-x-2 lg:space-x-10 items-center text-xl">
      {
        pageName !== "home" && (
          <a class="hidden lg:inline-block" href="/">
            Home
          </a>
        )
      }
      {
        pageName !== "works" && (
          <a class="hidden lg:inline-block" href="/works">
            Projects
          </a>
        )
      }
      {
        pageName !== "contact" && (
          <a class="hidden lg:inline-block" href="/#contact">
            Contact
          </a>
        )
      }
      <ThemePopover client:only="react" />
      <button
        class="p-3 cursor-pointer lg:hidden"
        id="ham_btn"
        aria-label="open nav"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="w-6 h-6"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 9h16.5m-16.5 6.75h16.5"></path>
        </svg>
      </button>
    </div>
  </div>
  <div
    id="mob_links"
    class="flex hidden flex-col items-center space-y-8 py-4 mt-4 text-xl"
  >
    {pageName !== "home" && <a href="/">Home</a>}
    {pageName !== "works" && <a href="/works">Projects</a>}
    {pageName !== "contact" && <a href="/#contact">Contact</a>}
  </div>
</nav>

<style is:inline>
  nav {
    backdrop-filter: blur(3px) saturate(200%);
    -webkit-backdrop-filter: blur(3px) saturate(200%);
    background-color: rgba(255, 255, 255, 0.85);
  }

  html.dark nav {
    backdrop-filter: blur(3px) saturate(200%);
    -webkit-backdrop-filter: blur(3px) saturate(200%);
    background-color: rgba(24, 26, 27, 0.75);
  }
</style>

<script>
  const ham = document.getElementById("ham_btn")!;
  const mobile_nav = document.getElementById("mob_links")!;

  ham.addEventListener("click", () => {
    mobile_nav.classList.toggle("hidden");
  });
  Array.from(mobile_nav.children).forEach((child) =>
    child.addEventListener("click", () => mobile_nav.classList.add("hidden"))
  );
</script>
